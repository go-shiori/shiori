/* tslint:disable */
/* eslint-disable */
/**
 * 
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  ApiV1UpdateAccountPayload,
  ModelAccountDTO,
} from '../models/index';
import {
    ApiV1UpdateAccountPayloadFromJSON,
    ApiV1UpdateAccountPayloadToJSON,
    ModelAccountDTOFromJSON,
    ModelAccountDTOToJSON,
} from '../models/index';

export interface ApiV1AccountsIdDeleteRequest {
    id: number;
}

export interface ApiV1AccountsIdPatchRequest {
    id: number;
    account: ApiV1UpdateAccountPayload;
}

/**
 * 
 */
export class AccountsApi extends runtime.BaseAPI {

    /**
     * List accounts
     * List accounts
     */
    async apiV1AccountsGetRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<ModelAccountDTO>>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};


        let urlPath = `/api/v1/accounts`;

        const response = await this.request({
            path: urlPath,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(ModelAccountDTOFromJSON));
    }

    /**
     * List accounts
     * List accounts
     */
    async apiV1AccountsGet(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<ModelAccountDTO>> {
        const response = await this.apiV1AccountsGetRaw(initOverrides);
        return await response.value();
    }

    /**
     * Delete an account
     */
    async apiV1AccountsIdDeleteRaw(requestParameters: ApiV1AccountsIdDeleteRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters['id'] == null) {
            throw new runtime.RequiredError(
                'id',
                'Required parameter "id" was null or undefined when calling apiV1AccountsIdDelete().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};


        let urlPath = `/api/v1/accounts/{id}`;
        urlPath = urlPath.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters['id'])));

        const response = await this.request({
            path: urlPath,
            method: 'DELETE',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * Delete an account
     */
    async apiV1AccountsIdDelete(requestParameters: ApiV1AccountsIdDeleteRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.apiV1AccountsIdDeleteRaw(requestParameters, initOverrides);
    }

    /**
     * Update an account
     */
    async apiV1AccountsIdPatchRaw(requestParameters: ApiV1AccountsIdPatchRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ModelAccountDTO>> {
        if (requestParameters['id'] == null) {
            throw new runtime.RequiredError(
                'id',
                'Required parameter "id" was null or undefined when calling apiV1AccountsIdPatch().'
            );
        }

        if (requestParameters['account'] == null) {
            throw new runtime.RequiredError(
                'account',
                'Required parameter "account" was null or undefined when calling apiV1AccountsIdPatch().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';


        let urlPath = `/api/v1/accounts/{id}`;
        urlPath = urlPath.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters['id'])));

        const response = await this.request({
            path: urlPath,
            method: 'PATCH',
            headers: headerParameters,
            query: queryParameters,
            body: ApiV1UpdateAccountPayloadToJSON(requestParameters['account']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ModelAccountDTOFromJSON(jsonValue));
    }

    /**
     * Update an account
     */
    async apiV1AccountsIdPatch(requestParameters: ApiV1AccountsIdPatchRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ModelAccountDTO> {
        const response = await this.apiV1AccountsIdPatchRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Create an account
     */
    async apiV1AccountsPostRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ModelAccountDTO>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};


        let urlPath = `/api/v1/accounts`;

        const response = await this.request({
            path: urlPath,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ModelAccountDTOFromJSON(jsonValue));
    }

    /**
     * Create an account
     */
    async apiV1AccountsPost(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ModelAccountDTO> {
        const response = await this.apiV1AccountsPostRaw(initOverrides);
        return await response.value();
    }

}
