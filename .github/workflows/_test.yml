name: "Unit Tests"

on: workflow_call

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: shiori
          POSTGRES_USER: shiori
        options: >-
          --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
        ports:
        - 5432:5432
      mariadb:
        image: mariadb:11
        env:
          MYSQL_USER: shiori
          MYSQL_PASSWORD: shiori
          MYSQL_DATABASE: shiori
          MYSQL_ROOT_PASSWORD: shiori
        options: >-
          --health-cmd="/usr/local/bin/healthcheck.sh --connect" --health-interval 10s --health-timeout 5s --health-retries 5
        ports:
        - 3306:3306

    name: Go unit tests
    steps:
    - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

    - name: Setup go
      uses: actions/setup-go@0c52d547c9bc32b1aa3301fd7a9cb496313a4491 # v5.0.0
      with:
        go-version-file: ./go.mod

    - name: Set up gotestfmt
      uses: gotesttools/gotestfmt-action@65f1d2228f06cc5e828b84597440fbd063d12ea2 # v2.1.0

    - uses: actions/cache@704facf57e6136b1bc63b828d79edcd491f0ee84 # 3.3.2
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg
        key: golangci-lint.cache-{platform-arch}-{interval_number}-{go.mod_hash}
        restore-keys: |
          golangci-lint.cache-{interval_number}-
          golangci-lint.cache-

    - run: make unittest
      env:
        SHIORI_TEST_PG_URL: "postgres://shiori:shiori@localhost:5432/shiori?sslmode=disable"
        SHIORI_TEST_MYSQL_URL: "shiori:shiori@(localhost:3306)/shiori"

    - run: CGO_ENABLED=0 go build -tags osusergo,netgo -ldflags="-s -w -X main.version=$(git describe --tags) -X main.date=$(date --iso-8601=seconds)"

    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@eaaf4bedf32dbdc6b720b63067d99c4d77d6047d # 3.1.4
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
