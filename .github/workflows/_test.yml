name: "Unit Tests"

on:
  workflow_call:
    secrets:
      CODECOV_TOKEN:
        required: true

env:
  CGO_ENABLED: 0

jobs:
  test-linux:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: shiori
          POSTGRES_USER: shiori
        options: >-
          --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
        ports:
        - 5432:5432
      mariadb:
        image: mariadb:11
        env:
          MYSQL_USER: shiori
          MYSQL_PASSWORD: shiori
          MYSQL_DATABASE: shiori
          MYSQL_ROOT_PASSWORD: shiori
        options: >-
          --health-cmd="/usr/local/bin/healthcheck.sh --connect" --health-interval 10s --health-timeout 5s --health-retries 5
        ports:
        - 3306:3306

    name: Go unit tests (ubuntu-latest)
    steps:
    - uses: actions/checkout@a5ac7e51b41094c92402da3b24376905380afc29 # v4.1.6

    - name: Setup go
      uses: actions/setup-go@cdcb36043654635271a94b9a6d1392de5bb323a7 # v5.0.1
      with:
        go-version-file: ./go.mod

    - name: Set up gotestfmt
      uses: gotesttools/gotestfmt-action@8b4478c7019be847373babde9300210e7de34bfb # v2.2.0

    - uses: actions/cache@0c45773b623bea8c8e75f6c82b208c3cf94ea4f9 # 4.0.2
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg
        key: golangci-lint.cache-{platform-arch}-{interval_number}-{go.mod_hash}
        restore-keys: |
          golangci-lint.cache-{interval_number}-
          golangci-lint.cache-

    - run: make unittest
      env:
        SHIORI_TEST_PG_URL: "postgres://shiori:shiori@localhost:5432/shiori?sslmode=disable"
        SHIORI_TEST_MYSQL_URL: "shiori:shiori@(localhost:3306)/shiori"
        CGO_ENABLED: 1 # go test -race requires cgo

    - run: go build -tags osusergo,netgo -ldflags="-s -w -X main.version=$(git describe --tags) -X main.date=$(date --iso-8601=seconds)"

    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@125fc84a9a348dbcf27191600683ec096ec9021c # 4.4.1
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  test-windows-macos:
    strategy:
      matrix:
        os: [windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    name: Go unit tests (${{ matrix.os }})
    steps:
    - uses: actions/checkout@a5ac7e51b41094c92402da3b24376905380afc29 # v4.1.6

    - name: Setup go
      uses: actions/setup-go@cdcb36043654635271a94b9a6d1392de5bb323a7 # v5.0.1
      with:
        go-version-file: ./go.mod

    - uses: actions/cache@0c45773b623bea8c8e75f6c82b208c3cf94ea4f9 # 4.0.2
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg
        key: golangci-lint.cache-{platform-arch}-{interval_number}-{go.mod_hash}
        restore-keys: |
          golangci-lint.cache-{interval_number}-
          golangci-lint.cache-

    - run: make unittest GO_TEST_FLAGS="-tags test_sqlite_only -race -v -count=1"
      env:
        CGO_ENABLED: 1 # go test -race requires cgo

    - run: go build -tags osusergo,netgo -ldflags="-s -w -X main.version=$(git describe --tags) -X main.date=$(date --iso-8601=seconds)"

  # Please note BSD support is offered on a best-effort basis, this check is not blocking but for us to be aware of issues.
  # This test also does not take into consideration the go version specified in the go.mod file and just uses the
  # latest version available in the openbsd package repository.
  test-bsd:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os:
          - name: openbsd
            architecture: x86-64
            version: '7.5'

    steps:
      - uses: actions/checkout@a5ac7e51b41094c92402da3b24376905380afc29 # v4.1.6

      - name: Test on ${{ matrix.os.name }}
        uses: cross-platform-actions/action@b2e15da1e667187766fff4945d20b98ac7055576 # v0.24.0
        with:
          environment_variables: GO_VERSION
          operating_system: ${{ matrix.os.name }}
          architecture: ${{ matrix.os.architecture }}
          version: ${{ matrix.os.version }}
          shell: bash
          memory: 1G
          cpu_count: 1
          run: |
            sudo pkg_add -u
            sudo pkg_add gmake git go
            gmake unittest GO_TEST_FLAGS="-tags test_sqlite_only -v -count=1"
