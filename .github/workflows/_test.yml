name: "Unit Tests"

on:
  workflow_call:
    secrets:
      CODECOV_TOKEN:
        required: true

env:
  CGO_ENABLED: 0

jobs:
  test-linux:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:13.18
        env:
          POSTGRES_PASSWORD: shiori
          POSTGRES_USER: shiori
        options: >-
          --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
        ports:
          - 5432:5432
      mariadb:
        image: mariadb:10.5.27
        env:
          MYSQL_USER: shiori
          MYSQL_PASSWORD: shiori
          MYSQL_DATABASE: shiori
          MYSQL_ROOT_PASSWORD: shiori
        options: >-
          --health-cmd="/usr/local/bin/healthcheck.sh --connect" --health-interval 10s --health-timeout 5s --health-retries 5
        ports:
          - 3306:3306
      mysql:
        image: mysql:8.0.40
        env:
          MYSQL_USER: shiori
          MYSQL_PASSWORD: shiori
          MYSQL_DATABASE: shiori
          MYSQL_ROOT_PASSWORD: shiori
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3
        ports:
          - 3307:3306

    name: Go unit tests (ubuntu-latest)
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Setup go
        uses: actions/setup-go@44694675825211faa026b3c33043df3e48a5fa00 # v6.0.0
        with:
          go-version-file: ./go.mod

      - name: Set up gotestfmt
        uses: gotesttools/gotestfmt-action@8b4478c7019be847373babde9300210e7de34bfb # v2.2.0

      - uses: actions/cache@0057852bfaa89a56745cba8c7296529d2fc39830 # 4.3.0
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg
          key: golangci-lint.cache-{platform-arch}-{interval_number}-{go.mod_hash}
          restore-keys: |
            golangci-lint.cache-{interval_number}-
            golangci-lint.cache-

      - run: make unittest
        env:
          SHIORI_TEST_PG_URL: "postgres://shiori:shiori@localhost:5432/shiori?sslmode=disable"
          SHIORI_TEST_MYSQL_URL: "shiori:shiori@(localhost:3306)/shiori"
          SHIORI_TEST_MARIADB_URL: "shiori:shiori@(localhost:3307)/shiori"
          CGO_ENABLED: 1 # go test -race requires cgo

      - run: go build -tags osusergo,netgo -ldflags="-s -w -X main.version=$(git describe --tags) -X main.date=$(date --iso-8601=seconds)"

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@5a1091511ad55cbe89839c7260b706298ca349f7 # 5.5.1
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  test-windows-macos:
    strategy:
      matrix:
        os: [windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    name: Go unit tests (${{ matrix.os }})
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Setup go
        uses: actions/setup-go@44694675825211faa026b3c33043df3e48a5fa00 # v6.0.0
        with:
          go-version-file: ./go.mod

      - uses: actions/cache@0057852bfaa89a56745cba8c7296529d2fc39830 # 4.3.0
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg
          key: golangci-lint.cache-{platform-arch}-{interval_number}-{go.mod_hash}
          restore-keys: |
            golangci-lint.cache-{interval_number}-
            golangci-lint.cache-

      - run: make unittest GO_TEST_FLAGS="-tags test_sqlite_only -race -v -count=1"
        env:
          CGO_ENABLED: 1 # go test -race requires cgo

      - run: go build -tags osusergo,netgo -ldflags="-s -w -X main.version=$(git describe --tags) -X main.date=$(date --iso-8601=seconds)"

  # Please note BSD support is offered on a best-effort basis, this check is not blocking but for us to be aware of issues.
  # This test also does not take into consideration the go version specified in the go.mod file and just uses the
  # latest version available in the openbsd package repository.
  test-bsd:
    continue-on-error: true
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os:
          - name: openbsd
            architecture: x86-64
            version: "7.7"
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Test on ${{ matrix.os.name }}
        uses: cross-platform-actions/action@e8a7b572196ff79ded1979dc2bb9ee67d1ddb252 # v0.29.0
        with:
          environment_variables: GO_VERSION
          operating_system: ${{ matrix.os.name }}
          architecture: ${{ matrix.os.architecture }}
          version: ${{ matrix.os.version }}
          shell: bash
          memory: 1G
          cpu_count: 1
          run: |
            sudo pkg_add -u
            sudo pkg_add gmake git
            curl -L https://go.dev/dl/go1.25.1.openbsd-amd64.tar.gz | sudo tar -C /usr/local -xzf -
            export PATH=$PATH:/usr/local/go/bin
            gmake unittest GO_TEST_FLAGS="-tags test_sqlite_only -v -count=1"
