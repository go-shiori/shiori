name: 'Build Docker'

on: workflow_call
jobs:
  buildx:
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    name: Build Docker
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: actions/download-artifact@v2
        with:
          name: dist
      - name: Prep image files
        run: |
          mkdir -p {etc,binaries}
          printf "root:x:0:0::/root:/bin/ash\nshiori:x:1000:1000::/shiori:/bin/ash" > etc/passwd
          printf "root:x:0:root\nshiori:x:1000:shiori" > etc/group
      - name: Prep binaries
        working-directory: binaries
        run: |
          cp -r ../shiori_linux_* .
          mv shiori_linux_arm_7 shiori_linux_arm
          gzip -d -S .gz__  -r .
          chmod 755 shiori_linux_*/shiori
          ls -lRh
      - name: Buildx
        run: |
          echo ${{ secrets.GITHUB_TOKEN }} | docker login -u go-shiori --password-stdin ghcr.io
          REPO=ghcr.io/go-shiori/shiori
          TAG=$(git describe --tags)
          if [ -z "$(git tag --points-at HEAD)" ]
          then
            TAG2="dev"
          else
            TAG2="latest"
          fi
          docker buildx create --use --name builder
          docker buildx ls
          printf 'FROM ghcr.io/ghcri/alpine:3.15\nARG TARGETARCH\nCOPY etc /etc\nCOPY binaries/shiori_linux_$TARGETARCH/shiori /usr/bin/shiori' > Containerfile
          printf '\nLABEL org.opencontainers.image.source https://github.com/n8225/shiori\nUSER shiori\nWORKDIR /shiori\nEXPOSE 8080\nENV SHIORI_DIR=/shiori\nENTRYPOINT ["/usr/bin/shiori"]\nCMD ["serve"]' >> Containerfile
          docker buildx build -f Containerfile --platform=linux/amd64,arm64,linux/arm/v7 --push --output=type=registry --tag $REPO:$TAG --tag $REPO:$TAG2 .
